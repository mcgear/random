// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bNJjNc2NbC4jfBdycy75o8
// Component: -qFSc60jT7K
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: ThexOuedbks1/component
import Button from "../../Button"; // plasmic-import: 9tG1OyZAVIis/component
import Section from "../../Section"; // plasmic-import: lsmUdTd1Sc6_/component
import ValueProp from "../../ValueProp"; // plasmic-import: 7Osq_1lpBJMp/component
import Banner from "../../Banner"; // plasmic-import: vcZIwAsP-PHX/component
import PriceCard from "../../PriceCard"; // plasmic-import: 7SzxSSEbWsst/component
import FooterSection from "../../FooterSection"; // plasmic-import: iXxSJX956e4d/component

import { useScreenVariants as useScreenVariantsxs8LqfxZhwLy } from "../landing_page_starter/PlasmicGlobalVariant__Screen"; // plasmic-import: XS8lqfxZhwLY/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "../landing_page_starter/plasmic_landing_page_starter.module.css"; // plasmic-import: bNJjNc2NbC4jfBdycy75o8/projectcss
import sty from "./PlasmicLandingPagesVue.module.css"; // plasmic-import: -qFSc60jT7K/css

import AppleIcon from "../landing_page_starter/icons/PlasmicIcon__Apple"; // plasmic-import: MwxVTyBYf-O_/icon
import CheckIcon from "../landing_page_starter/icons/PlasmicIcon__Check"; // plasmic-import: ilXNZMoWvbmT/icon
import HammerIcon from "../landing_page_starter/icons/PlasmicIcon__Hammer"; // plasmic-import: ePabL_LXTnk1/icon
import TargetIcon from "../landing_page_starter/icons/PlasmicIcon__Target"; // plasmic-import: EMtLeGl57bmd/icon
import FastIcon from "../landing_page_starter/icons/PlasmicIcon__Fast"; // plasmic-import: WqD9rzKB0T2b/icon
import StrongIcon from "../landing_page_starter/icons/PlasmicIcon__Strong"; // plasmic-import: FK_DHr1NmIMb/icon

export type PlasmicLandingPagesVue__VariantMembers = {};

export type PlasmicLandingPagesVue__VariantsArgs = {};
type VariantPropType = keyof PlasmicLandingPagesVue__VariantsArgs;
export const PlasmicLandingPagesVue__VariantProps =
  new Array<VariantPropType>();

export type PlasmicLandingPagesVue__ArgsType = {};
type ArgPropType = keyof PlasmicLandingPagesVue__ArgsType;
export const PlasmicLandingPagesVue__ArgProps = new Array<ArgPropType>();

export type PlasmicLandingPagesVue__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  foreground?: p.Flex<"div">;
  img?: p.Flex<typeof p.PlasmicImg>;
  foreground2?: p.Flex<"div">;
  valuePropsSection?: p.Flex<typeof Section>;
  banner?: p.Flex<typeof Banner>;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultLandingPagesVueProps {}

function PlasmicLandingPagesVue__RenderFunc(props: {
  variants: PlasmicLandingPagesVue__VariantsArgs;
  args: PlasmicLandingPagesVue__ArgsType;
  overrides: PlasmicLandingPagesVue__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsxs8LqfxZhwLy()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">
          {"LowCodeUnit - Vue Development & Deployments in record time"}
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={"LowCodeUnit - Vue Development & Deployments in record time"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__tDode)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__a8BQr
                )}
              >
                {"Vue Deployments\nwith LowCodeUnit"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__z6MWr
                )}
              >
                {"Create, build, and deploy your next Vue app with LowCodeUnit"}
              </div>
            </p.Stack>

            <p.PlasmicImg
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"293px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/lowcodeunit_com/images/image14.png",
                fullWidth: 1200,
                fullHeight: 1040,
                aspectRatio: undefined
              }}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <div className={classNames(projectcss.all, sty.columns__b3E2T)}>
                <div className={classNames(projectcss.all, sty.column__j9YnE)}>
                  <Button
                    className={classNames("__wab_instance", sty.button__m1Erw)}
                    color={"blue" as const}
                    link={
                      "/dashboard/create-project?recipeId=00000000-0000-0000-0000-000000000003" as const
                    }
                  >
                    {"Get Started for Free"}
                  </Button>
                </div>

                <div className={classNames(projectcss.all, sty.column___6MnAv)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__sFEt
                    )}
                    component={Link}
                    href={"/docs/guides/deploying/frameworks/vue" as const}
                    platform={"nextjs"}
                  >
                    {"Learn more >"}
                  </p.PlasmicLink>
                </div>
              </div>
            </p.Stack>

            <Section
              data-plasmic-name={"valuePropsSection"}
              data-plasmic-override={overrides.valuePropsSection}
              className={classNames("__wab_instance", sty.valuePropsSection)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___3ChIw)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__f7K25)}>
                  <h2
                    className={classNames(
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__vtNU
                    )}
                  >
                    {"See how Vue Compares"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___6DhOz
                  )}
                >
                  {
                    "Looking for the right framework for your next JAMStack example, tutorial or project?  Deploy Vue alongside any number of additional frameworks, get a feel for the development experience, and see how they perform.  Deploy your Vue app free with Fathym's LowCodeUnit micro frontend framework."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kO3Mc)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__nuOoY)}
                >
                  <ValueProp
                    className={classNames(
                      "__wab_instance",
                      sty.valueProp__oirUm
                    )}
                    description={
                      <React.Fragment>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zmXw1
                          )}
                        >
                          {
                            "React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components."
                          }
                        </div>

                        <Button link={"/react" as const}>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rZBt3
                            )}
                          >
                            {"React Deployments >"}
                          </div>
                        </Button>
                      </React.Fragment>
                    }
                    flatIcon={true}
                    icon={
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__l8Swl)}
                        role={"img"}
                      />
                    }
                    title={"VueJS vs React"}
                  />

                  <ValueProp
                    className={classNames(
                      "__wab_instance",
                      sty.valueProp__uZ2D
                    )}
                    description={
                      <React.Fragment>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zdirw
                          )}
                        >
                          {
                            "Learn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. Deploy your Angular app now."
                          }
                        </div>

                        <Button link={"/angular" as const}>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aafyz
                            )}
                          >
                            {"Angular Deployments >"}
                          </div>
                        </Button>
                      </React.Fragment>
                    }
                    flatIcon={true}
                    icon={
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg__zuo07)}
                        role={"img"}
                      />
                    }
                    title={"VueJS vs Angular"}
                  />

                  <ValueProp
                    className={classNames(
                      "__wab_instance",
                      sty.valueProp___1Yt8V
                    )}
                    description={
                      <React.Fragment>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mxhRi
                          )}
                        >
                          {
                            "Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app."
                          }
                        </div>

                        <Button link={"/svelte-deployment" as const}>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__v2OmJ
                            )}
                          >
                            {"Svelte Deployments >"}
                          </div>
                        </Button>
                      </React.Fragment>
                    }
                    flatIcon={true}
                    icon={
                      <CheckIcon
                        className={classNames(projectcss.all, sty.svg___00Bgo)}
                        role={"img"}
                      />
                    }
                    title={"VueJS vs Svelte"}
                  />
                </p.Stack>
              </p.Stack>
            </Section>

            <Banner
              data-plasmic-name={"banner"}
              data-plasmic-override={overrides.banner}
              className={classNames("__wab_instance", sty.banner)}
              left={
                <React.Fragment>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wpvny
                    )}
                  >
                    {"React Example Tutorial"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p2NTv
                    )}
                  >
                    {"Do it Yourself"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ciVwm
                    )}
                  >
                    {
                      "Get started now and deploy your Vue app to production following the simple deployment guide. Have your Vue micro frontend hosted on your domain in minutes."
                    }
                  </div>

                  <Button
                    link={"/docs/guides/deploying/frameworks/vue" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q60Dm
                      )}
                    >
                      {"Read Documentation >"}
                    </div>
                  </Button>
                </React.Fragment>
              }
            />
          </p.Stack>

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground3"}
              data-plasmic-override={overrides.foreground3}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wRLE)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__dsTqr)}>
                  <h2
                    className={classNames(
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__xmy8W
                    )}
                  >
                    {"Why deploy Vue?"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aj8VO
                  )}
                >
                  {
                    "The progressive javascript framework.\n\nAlready know HTML, CSS and JavaScript? Read the guide and start building things in no time!\n\nAn incrementally adoptable ecosystem that scales between a library and a full-featured framework.\n\n20KB min+gzip Runtime\nBlazing Fast Virtual DOM\nMinimal Optimization Efforts"
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cmyl3)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__noxB)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___2Xr3J)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___4AtOa
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9V0Dk
                            )}
                          >
                            {
                              "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                            }
                          </div>
                        }
                        icon={
                          <HammerIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___4ZbKk
                            )}
                            role={"img"}
                          />
                        }
                        title={"Harder"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__pm697)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__yDvEd
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__o6SXu
                            )}
                          >
                            {
                              "Consequat scelerisque a eros taciti nisl a sodales."
                            }
                          </div>
                        }
                        icon={
                          <TargetIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__m2Swp
                            )}
                            role={"img"}
                          />
                        }
                        title={"Better"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__nEe6V)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__wadll
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___6B06L
                            )}
                          >
                            {
                              "Varius ad malesuada ullamcorper cursus scelerisque a a."
                            }
                          </div>
                        }
                        icon={
                          <FastIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___5WGv
                            )}
                            role={"img"}
                          />
                        }
                        title={"Faster"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__d7KUm)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___9EfXy
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hg6DY
                            )}
                          >
                            {
                              "Ut eu nam nostra taciti congue adipiscing curabitur."
                            }
                          </div>
                        }
                        icon={
                          <StrongIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ufi4Y
                            )}
                            role={"img"}
                          />
                        }
                        title={"Stronger"}
                        vertical={true}
                      />
                    </div>
                  </p.Stack>
                ) : null}
              </p.Stack>

              <div className={classNames(projectcss.all, sty.columns__eEt33)}>
                <div className={classNames(projectcss.all, sty.column__scqfY)}>
                  <Button
                    className={classNames("__wab_instance", sty.button___2T7Hl)}
                    color={"blue" as const}
                    link={
                      "/dashboard/create-project?recipeId=00000000-0000-0000-0000-000000000003" as const
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dfGet
                      )}
                    >
                      {"Get Started for Free"}
                    </div>
                  </Button>
                </div>

                <div className={classNames(projectcss.all, sty.column___1QFIo)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___5VvDd
                    )}
                    component={Link}
                    href={"/docs/guides/deploying/frameworks/vue" as const}
                    platform={"nextjs"}
                  >
                    {"Learn more >"}
                  </p.PlasmicLink>
                </div>
              </div>
            </p.Stack>
          </section>

          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__a8Zr6)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ya4Oz)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iiyvU)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tZCz3)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bNgdi
                      )}
                    >
                      {"Pricing plans"}
                    </div>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__obMjd
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___9Ejso)}
                >
                  <PriceCard
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__tcUpo
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__gf53X
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__uymFs
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__djFae
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___3BAE
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"0"}
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tRvGl
                        )}
                      >
                        {"Buy Pro"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard___1SvpG
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__eRbOh
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__l35Fe
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___1Pctf
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hNusn
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__kv6G4
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hMm6D
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"8"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__foDl
                        )}
                      >
                        {"Pro"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__a56BJ
                        )}
                      >
                        {"Buy Team"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard___9O6Vj
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__z4QcD
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dAnDu
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__oepPk
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___7P9B
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__p57N5
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___3AbuU
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___4DcRn
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__jywjh
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"16"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7PcgT
                        )}
                      >
                        {"Team"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qpCdF
                        )}
                      >
                        {"Contact us"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard___6Bp
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__iCfg7
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___3XmoU
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__kQaEt
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__a6SEo
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__onnQc
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__wLxcw
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__f74Vb
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vAvS3
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"?"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tzvF1
                        )}
                      >
                        {"Enterprise"}
                      </div>
                    }
                    primary={true}
                  />
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "foreground",
    "img",
    "foreground2",
    "valuePropsSection",
    "banner",
    "section",
    "foreground3",
    "footerSection"
  ],
  navbar: ["navbar"],
  foreground: ["foreground"],
  img: ["img"],
  foreground2: ["foreground2"],
  valuePropsSection: ["valuePropsSection"],
  banner: ["banner"],
  section: ["section", "foreground3"],
  foreground3: ["foreground3"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  foreground: "div";
  img: typeof p.PlasmicImg;
  foreground2: "div";
  valuePropsSection: typeof Section;
  banner: typeof Banner;
  section: "section";
  foreground3: "div";
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLandingPagesVue__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLandingPagesVue__VariantsArgs;
    args?: PlasmicLandingPagesVue__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLandingPagesVue__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLandingPagesVue__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicLandingPagesVue__ArgProps,
      internalVariantPropNames: PlasmicLandingPagesVue__VariantProps
    });

    return PlasmicLandingPagesVue__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLandingPagesVue";
  } else {
    func.displayName = `PlasmicLandingPagesVue.${nodeName}`;
  }
  return func;
}

export const PlasmicLandingPagesVue = Object.assign(
  // Top-level PlasmicLandingPagesVue renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    foreground: makeNodeComponent("foreground"),
    img: makeNodeComponent("img"),
    foreground2: makeNodeComponent("foreground2"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    banner: makeNodeComponent("banner"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicLandingPagesVue
    internalVariantProps: PlasmicLandingPagesVue__VariantProps,
    internalArgProps: PlasmicLandingPagesVue__ArgProps
  }
);

export default PlasmicLandingPagesVue;
/* prettier-ignore-end */
