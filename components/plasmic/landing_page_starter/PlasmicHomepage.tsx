// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bNJjNc2NbC4jfBdycy75o8
// Component: Ess5kdNBQke
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: ThexOuedbks1/component
import Button from "../../Button"; // plasmic-import: 9tG1OyZAVIis/component
import Section from "../../Section"; // plasmic-import: lsmUdTd1Sc6_/component
import ValueProp from "../../ValueProp"; // plasmic-import: 7Osq_1lpBJMp/component
import ListItem from "../../ListItem"; // plasmic-import: NsK2QjXT7pcM/component
import PriceCard from "../../PriceCard"; // plasmic-import: 7SzxSSEbWsst/component
import Banner from "../../Banner"; // plasmic-import: vcZIwAsP-PHX/component
import Testimonial from "../../Testimonial"; // plasmic-import: ehiWvKp_fzme/component
import CallToActionSection from "../../CallToActionSection"; // plasmic-import: T0bbL5EU2k3r/component
import FooterSection from "../../FooterSection"; // plasmic-import: iXxSJX956e4d/component

import { useScreenVariants as useScreenVariantsxs8LqfxZhwLy } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: XS8lqfxZhwLY/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_landing_page_starter.module.css"; // plasmic-import: bNJjNc2NbC4jfBdycy75o8/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: Ess5kdNBQke/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: MwxVTyBYf-O_/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: LDeJ2smQIyiO/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: ilXNZMoWvbmT/icon
import CheckCircleIcon from "./icons/PlasmicIcon__CheckCircle"; // plasmic-import: Ct6TrdIWVYnJ/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  headerHeroSection?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  valuePropsSection?: p.Flex<typeof Section>;
  checkpointsSection?: p.Flex<typeof Section>;
  pricingSection?: p.Flex<typeof Section>;
  shopBannersSection?: p.Flex<typeof Section>;
  logoCloudSection?: p.Flex<typeof Section>;
  testimonialsSection?: p.Flex<typeof Section>;
  callToActionSection?: p.Flex<typeof CallToActionSection>;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsxs8LqfxZhwLy()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">
          {
            "LowCodeUnit - Develop & Deploy modern web experiences with your team"
          }
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={
            "LowCodeUnit - Develop & Deploy modern web experiences with your team"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__nVmJy)}
            >
              <div className={classNames(projectcss.all, sty.column__uhjuo)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__vcd8Q)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gWhhY)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nQc0P)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5KJuZ
                        )}
                      >
                        {"BETA!"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bAdTn
                      )}
                    >
                      {"Accelerated Engagement"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zKop
                      )}
                    >
                      {
                        "Accelerate software delivery by keeping dirty code out of your main branch"
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__mycgO)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__cUzrP
                      )}
                      color={"blue" as const}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__wuT7)}
                          role={"img"}
                        />
                      }
                      link={"/dashboard/create-project" as const}
                      showEndIcon={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__boBwT
                        )}
                      >
                        {"Get Started for Free"}
                      </div>
                    </Button>

                    <Button
                      bgDifference={true}
                      className={classNames(
                        "__wab_instance",
                        sty.button__rr6Ky
                      )}
                      color={"darkGray" as const}
                      link={"/docs" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oh0Jd
                        )}
                      >
                        {"Learn moreâ€¦"}
                      </div>
                    </Button>
                  </p.Stack>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column__h9V0M)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__b2Ghp)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/landing_page_starter/images/image.png",
                    fullWidth: 485,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </p.Stack>

          <Section
            data-plasmic-name={"valuePropsSection"}
            data-plasmic-override={overrides.valuePropsSection}
            className={classNames("__wab_instance", sty.valuePropsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mu13)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__kP668)}>
                <h2
                  className={classNames(
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__uhf72
                  )}
                >
                  {"Built for Open Source"}
                </h2>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mTaDc
                )}
              >
                {
                  "Accelerate adoption, grow your community, monetize services and hosting.  Fathym's LowCodeUnit allows you to focus on delivering quality open-source solutions to your community, with a virtual development team to help you manage your cloud, devops, and monetization. "
                }
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__kO3Mc)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nuOoY)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__abLjc)}
                  description={
                    "orchestration tools that bring open source to your solutions."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__zzJ8)}
                      role={"img"}
                    />
                  }
                  title={"Powerful"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__aRwE0)}
                  description={
                    "pages for your users, faster time to market for your team."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__gbSlp)}
                      role={"img"}
                    />
                  }
                  title={"Faster"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__aICgJ)}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jyQhh
                      )}
                    >
                      {"for engaging users with modern web projects."}
                    </div>
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__gxU2D)}
                      role={"img"}
                    />
                  }
                  title={"Best practices"}
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___1OEyf)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__sNrTh)}
                  description={"devops powered by modern devops practices."}
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__uEtP9)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3Rb1F
                      )}
                    >
                      {"Portable"}
                    </div>
                  }
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__i37A5)}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___47Cnh
                      )}
                    >
                      {
                        "make it easier to deliver, test, and iterate on solutions that engage users."
                      }
                    </div>
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__oXDp9)}
                      role={"img"}
                    />
                  }
                  title={"Micro-frontends"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__ieC1Q)}
                  description={
                    "that integrate analytics, A/B testing, engagement and more. "
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__z1Nd)}
                      role={"img"}
                    />
                  }
                  title={"Application Modifiers"}
                />
              </p.Stack>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"checkpointsSection"}
            data-plasmic-override={overrides.checkpointsSection}
            background={"dark" as const}
            className={classNames("__wab_instance", sty.checkpointsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__lfepV)}
              id={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("features" as const)
                  : ("features" as const)
              }
            >
              <div className={classNames(projectcss.all, sty.column__m42T0)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fCCm)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fpXaR
                    )}
                  >
                    {"Freedoms"}
                  </div>

                  <h2
                    className={classNames(
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___8KWgn
                    )}
                  >
                    {"Design to be open"}
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eclxv
                    )}
                  >
                    {
                      "Build solutions that grow and adapt with the communities you serve.  Empower business owners, web admins, and friends."
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__n8RGu)}
                    endIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__xlal2)}
                        role={"img"}
                      />
                    }
                    flat={true}
                    link={"/docs" as const}
                    showEndIcon={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zbNzz
                      )}
                    >
                      {"Learn more"}
                    </div>
                  </Button>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column__iThdz)}>
                <div className={classNames(projectcss.all, sty.freeBox__dg3UX)}>
                  <ListItem
                    bottomBorder={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("dark" as const)
                        : ("dark" as const)
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.listItem___4V2B6
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__spNif)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dMvab
                      )}
                    >
                      {"Built in public"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__mFLmi
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__rH2YT)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qE2A3
                      )}
                    >
                      {"Communities that adapt"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__erdMz
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__olAte)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xeRf1
                      )}
                    >
                      {"Open source for the enterprise"}
                    </div>
                  </ListItem>

                  <ListItem
                    className={classNames(
                      "__wab_instance",
                      sty.listItem___4LEwx
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg___83Uz)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vg6Ue
                      )}
                    >
                      {"Modern web projects"}
                    </div>
                  </ListItem>

                  <ListItem
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__inDc1
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__yzHcy)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__piv56
                      )}
                    >
                      {"Automated DevOps"}
                    </div>
                  </ListItem>
                </div>
              </div>
            </p.Stack>
          </Section>

          {true ? (
            <Section
              data-plasmic-name={"pricingSection"}
              data-plasmic-override={overrides.pricingSection}
              background={"dark" as const}
              className={classNames("__wab_instance", sty.pricingSection)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__x9JFp)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cpYbj)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___4PP)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lys9Y
                      )}
                    >
                      {"Free During BETA"}
                    </div>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mCne
                    )}
                  >
                    {
                      "Start now, scale later.  No vendor lock with open-source technology and Fathym's virtual development team.   \n\nUnlimited sites during beta, lifetime shared hosting for your beta created sites, one custom domain and free SSL."
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__zfW9T)}
                    color={"blue" as const}
                    endIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg___5A5Yr)}
                        role={"img"}
                      />
                    }
                    link={"/dashboard/create-project" as const}
                    showEndIcon={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iTbBp
                      )}
                    >
                      {"Get Started for Free"}
                    </div>
                  </Button>
                </p.Stack>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__a13GM)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__tsysE)}
                    >
                      <PriceCard
                        action={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kXiWk
                            )}
                          >
                            {"Get Started Now"}
                          </div>
                        }
                        borders={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? []
                            : ["flatRight"]
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard__sOPzv
                        )}
                        description={
                          <React.Fragment>
                            <ValueProp
                              className={classNames(
                                "__wab_instance",
                                sty.valueProp__mCmvt
                              )}
                              description={"Unlimited sites during beta"}
                              flatIcon={true}
                              icon={
                                <CheckIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__gzm6
                                  )}
                                  role={"img"}
                                />
                              }
                              noTitle={true}
                            />

                            <ValueProp
                              className={classNames(
                                "__wab_instance",
                                sty.valueProp___6Ifyf
                              )}
                              description={"Lifetime Shared Hosting Access"}
                              flatIcon={true}
                              icon={
                                <CheckIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__dIzk
                                  )}
                                  role={"img"}
                                />
                              }
                              noTitle={true}
                            />

                            <ValueProp
                              className={classNames(
                                "__wab_instance",
                                sty.valueProp__o8IsP
                              )}
                              description={"One custom domain and Free SSL"}
                              flatIcon={true}
                              icon={
                                <CheckIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__znhtd
                                  )}
                                  role={"img"}
                                />
                              }
                              noTitle={true}
                            />

                            <ValueProp
                              className={classNames(
                                "__wab_instance",
                                sty.valueProp__j6HN
                              )}
                              description={"Shared Single Sign On"}
                              flatIcon={true}
                              icon={
                                <CheckIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__saZ6
                                  )}
                                  role={"img"}
                                />
                              }
                              noTitle={true}
                            />
                          </React.Fragment>
                        }
                        dollars={"0"}
                        label={"BETA"}
                      />
                    </div>

                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__pfB9D
                        )}
                      >
                        <PriceCard
                          action={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ckmQu
                              )}
                            >
                              {"Contact Us"}
                            </div>
                          }
                          borders={[]}
                          className={classNames(
                            "__wab_instance",
                            sty.priceCard___1Ifm3
                          )}
                          description={
                            <React.Fragment>
                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__eG6T
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__j7K61
                                    )}
                                  >
                                    {"Everything in Starter, plus"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__orE4
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__htJ3J
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__jsptW
                                    )}
                                  >
                                    {"Team tools"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__pxcFs
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__q1Kxp
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__bD5V
                                    )}
                                  >
                                    {"Unlimited Custom domains and Free SSL"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___7BpFd
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__os7V3
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__eokDw
                                    )}
                                  >
                                    {"User Authentication and Authorization"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ueiRc
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__nkd24
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__op4ZN
                                    )}
                                  >
                                    {"Unlimited modifiers and routes"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__wsztC
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__nm25W
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__wCMtq
                                    )}
                                  >
                                    {"Custom Single Sign On"}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__x1E8T
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />
                            </React.Fragment>
                          }
                          dollars={"100"}
                          label={"PRO"}
                          primary={true}
                        />
                      </div>
                    ) : null}
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__tKkdO
                        )}
                      >
                        <PriceCard
                          action={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0HMvu
                              )}
                            >
                              {"Contact Us"}
                            </div>
                          }
                          borders={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? []
                              : ["flatLeft"]
                          }
                          className={classNames(
                            "__wab_instance",
                            sty.priceCard__adloa
                          )}
                          description={
                            <React.Fragment>
                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__buQSr
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__pdYnP
                                    )}
                                  >
                                    {"Managed private, hybrid cloud hosting."}
                                  </div>
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__wDua0
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__uPlvp
                                )}
                                description={
                                  "Cost control and savings automation"
                                }
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__zmOcc
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />

                              <ValueProp
                                className={classNames(
                                  "__wab_instance",
                                  sty.valueProp__prZEj
                                )}
                                description={"Unlimited team seats"}
                                flatIcon={true}
                                icon={
                                  <CheckIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__yx4BU
                                    )}
                                    role={"img"}
                                  />
                                }
                                noTitle={true}
                              />
                            </React.Fragment>
                          }
                          dollars={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__zg3P
                              )}
                            >
                              {"5,000"}
                            </div>
                          }
                          label={"Enterprise"}
                        />
                      </div>
                    ) : null}
                  </p.Stack>
                ) : null}
              </p.Stack>
            </Section>
          ) : null}

          <Section
            data-plasmic-name={"shopBannersSection"}
            data-plasmic-override={overrides.shopBannersSection}
            className={classNames("__wab_instance", sty.shopBannersSection)}
            size={"fullContentWidth" as const}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mliHn)}
            >
              <Banner
                className={classNames("__wab_instance", sty.banner__fvJCq)}
                image={{
                  src: "/plasmic/landing_page_starter/images/image8.png",
                  fullWidth: 450,
                  fullHeight: 450,
                  aspectRatio: undefined
                }}
                left={
                  <React.Fragment>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jyCuk
                      )}
                    >
                      {"data as an Application"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__j0GnU
                      )}
                    >
                      {"iot ensemble + lowcodeunit"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rVxsW
                      )}
                    >
                      {
                        "Connected?  IoT Ensemble data: data as a cloud API.\nHosted?  Customizable single page app.\nWhen?  Just a fork away."
                      }
                    </div>

                    <Button
                      color={"link" as const}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__jSbir)}
                          role={"img"}
                        />
                      }
                      flat={true}
                      showEndIcon={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nPvO
                        )}
                      >
                        {"Docs Coming Soon"}
                      </div>
                    </Button>
                  </React.Fragment>
                }
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hcypQ)}
              >
                <Banner
                  className={classNames("__wab_instance", sty.banner__pWnU)}
                  image={{
                    src: "/plasmic/landing_page_starter/images/image5.png",
                    fullWidth: 700,
                    fullHeight: 700,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wwPvv
                        )}
                      >
                        {"Clean Frameworks"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sN2VP
                        )}
                      >
                        {"svelte + lowcodeunit"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__elnSi
                        )}
                      >
                        {
                          "Good, clean  true low-code feels like crushed velvet.  Wrap yourself in it."
                        }
                      </div>

                      <Button
                        color={"link" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__b6LoV
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        link={"/svelte-deployment" as const}
                        showEndIcon={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___79LnD
                          )}
                        >
                          {"Get Started"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />

                <Banner
                  className={classNames("__wab_instance", sty.banner___0QS22)}
                  image={{
                    src: "/plasmic/landing_page_starter/images/image3.png",
                    fullWidth: 1200,
                    fullHeight: 675,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fJWuI
                        )}
                      >
                        {"Clean Frameworks"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dBNjp
                        )}
                      >
                        {"lowcodeunit on rails"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cUowN
                        )}
                      >
                        {
                          "Let's say your rubies are delivered via rails.  Steam engine?  Diesel?  Nah, let's go mag-lev.  Modernize the cloud infrastructure underneath it."
                        }
                      </div>

                      <Button
                        color={"link" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__bTRuy
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        showEndIcon={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fvFrh
                          )}
                        >
                          {"Docs Coming Soon"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />
              </p.Stack>

              <Banner
                className={classNames("__wab_instance", sty.banner__ozPwu)}
                image={{
                  src: "/plasmic/landing_page_starter/images/image2.png",
                  fullWidth: 784,
                  fullHeight: 1019,
                  aspectRatio: undefined
                }}
                left={
                  <React.Fragment>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lZDjs
                      )}
                    >
                      {"Data as an Application"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tU6D
                      )}
                    >
                      {"11ty + forestry.io + lowcodeunit"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nOoZt
                      )}
                    >
                      {
                        "Hard to see the forestry through the 11ty trees?  \nDon't lose your head!\nCommit to being headless!"
                      }
                    </div>

                    <Button
                      color={"link" as const}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg___4NHA)}
                          role={"img"}
                        />
                      }
                      flat={true}
                      link={
                        "/docs/guides/e-commerce/forestry-11ty-jamcart/overview" as const
                      }
                      showEndIcon={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xRvfr
                        )}
                      >
                        {"Get Started"}
                      </div>
                    </Button>
                  </React.Fragment>
                }
              />
            </p.Stack>
          </Section>

          {true ? (
            <Section
              data-plasmic-name={"logoCloudSection"}
              data-plasmic-override={overrides.logoCloudSection}
              className={classNames("__wab_instance", sty.logoCloudSection)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hhPwB)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__nn9Oq)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/landing_page_starter/images/loom.svg",
                    fullWidth: 300,
                    fullHeight: 91,
                    aspectRatio: 3.303226
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ftggO)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/landing_page_starter/images/strapi.svg",
                    fullWidth: 300,
                    fullHeight: 78,
                    aspectRatio: 3.849624
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__uTe6C)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/landing_page_starter/images/segment.svg",
                    fullWidth: 300,
                    fullHeight: 62,
                    aspectRatio: 4.87619
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__soAF)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/landing_page_starter/images/xstate.svg",
                    fullWidth: 300,
                    fullHeight: 94,
                    aspectRatio: 3.2
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___31V6W)}
                  displayHeight={"48px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={{
                    src: "/plasmic/landing_page_starter/images/mapbox.svg",
                    fullWidth: 300,
                    fullHeight: 67,
                    aspectRatio: 4.491228
                  }}
                />
              </p.Stack>
            </Section>
          ) : null}
          {true ? (
            <Section
              data-plasmic-name={"testimonialsSection"}
              data-plasmic-override={overrides.testimonialsSection}
              background={"gray" as const}
              className={classNames("__wab_instance", sty.testimonialsSection)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__onWf)}
              >
                <div className={classNames(projectcss.all, sty.column__p2Lgp)}>
                  <Testimonial
                    className={classNames(
                      "__wab_instance",
                      sty.testimonial__drVW
                    )}
                    image={{
                      src: "/plasmic/landing_page_starter/images/tracy.png",
                      fullWidth: 500,
                      fullHeight: 500,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__lrL1)}>
                  <Testimonial
                    className={classNames(
                      "__wab_instance",
                      sty.testimonial__ussQz
                    )}
                    image={{
                      src: "/plasmic/landing_page_starter/images/elaine.png",
                      fullWidth: 460,
                      fullHeight: 280,
                      aspectRatio: undefined
                    }}
                    name={"Elaine Benes"}
                    quote={
                      <React.Fragment>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__z0AWr
                          )}
                        >
                          {'"Vestibulum lacinia varius habitant dis aenean.'}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yHTlW
                          )}
                        >
                          {
                            'A parturient non ultricies a parturient leo a nascetur at consectetur turpis praesent mus ornare nulla posuere vel parturient."'
                          }
                        </div>
                      </React.Fragment>
                    }
                    title={"Editor, Pendant Publishing"}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__jbL9P)}>
                  <Testimonial
                    className={classNames(
                      "__wab_instance",
                      sty.testimonial__hHhb
                    )}
                    image={{
                      src: "/plasmic/landing_page_starter/images/louis.jpeg",
                      fullWidth: 2249,
                      fullHeight: 3000,
                      aspectRatio: undefined
                    }}
                    name={"Louis Huang"}
                    quote={
                      '"Purus dis a primis rhoncus blandit velit suspendisse porta at ullamcorper suscipit a scelerisque sed pharetra facilisi vitae."'
                    }
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gpeoP
                        )}
                      >
                        {"Restaurant Owner, Cattleman's Ranch"}
                      </div>
                    }
                  />
                </div>
              </p.Stack>
            </Section>
          ) : null}

          <CallToActionSection
            data-plasmic-name={"callToActionSection"}
            data-plasmic-override={overrides.callToActionSection}
            className={classNames("__wab_instance", sty.callToActionSection)}
            image={{
              src: "/plasmic/landing_page_starter/images/image9.png",
              fullWidth: 1200,
              fullHeight: 470,
              aspectRatio: undefined
            }}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vnQMz)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yaErR
                )}
              >
                {"Welcome"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0Sb3N
                )}
              >
                {"Let's get started"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bGarT
                )}
              >
                {
                  "Start building your next open-source project that engages your users."
                }
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__q7QsW)}
            >
              <Button
                className={classNames("__wab_instance", sty.button__lsSLx)}
                color={"blue" as const}
                endIcon={
                  <ChevronRightIcon
                    className={classNames(projectcss.all, sty.svg__tWuK)}
                    role={"img"}
                  />
                }
                link={"/dashboard/create-project" as const}
                showEndIcon={true}
              >
                {"Get Started for Free"}
              </Button>

              <Button
                bgDifference={true}
                className={classNames("__wab_instance", sty.button__bep7L)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gjKxq
                  )}
                >
                  {"Learn moreâ€¦"}
                </div>
              </Button>
            </p.Stack>
          </CallToActionSection>

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "valuePropsSection",
    "checkpointsSection",
    "pricingSection",
    "shopBannersSection",
    "logoCloudSection",
    "testimonialsSection",
    "callToActionSection",
    "footerSection"
  ],
  headerHeroSection: ["headerHeroSection", "navbar"],
  navbar: ["navbar"],
  valuePropsSection: ["valuePropsSection"],
  checkpointsSection: ["checkpointsSection"],
  pricingSection: ["pricingSection"],
  shopBannersSection: ["shopBannersSection"],
  logoCloudSection: ["logoCloudSection"],
  testimonialsSection: ["testimonialsSection"],
  callToActionSection: ["callToActionSection"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroSection: "div";
  navbar: typeof Navbar;
  valuePropsSection: typeof Section;
  checkpointsSection: typeof Section;
  pricingSection: typeof Section;
  shopBannersSection: typeof Section;
  logoCloudSection: typeof Section;
  testimonialsSection: typeof Section;
  callToActionSection: typeof CallToActionSection;
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    checkpointsSection: makeNodeComponent("checkpointsSection"),
    pricingSection: makeNodeComponent("pricingSection"),
    shopBannersSection: makeNodeComponent("shopBannersSection"),
    logoCloudSection: makeNodeComponent("logoCloudSection"),
    testimonialsSection: makeNodeComponent("testimonialsSection"),
    callToActionSection: makeNodeComponent("callToActionSection"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
